{"version":3,"sources":["services/FetchImages.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","components/Searchbar/Searchbar.jsx","components/Loader/Loader.jsx","App.js","services/smoothScroll.js","index.js"],"names":["fetchImages","query","page","a","axios","get","data","hits","ImageGalleryItem","largeImageURL","onClick","webformatURL","className","e","src","alt","ImageGallery","gallery","map","id","tags","modalRoot","document","querySelector","Modal","children","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","target","currentTarget","Button","type","Searchbar","onSubmit","useState","searchValue","setSearchValue","preventDefault","name","autoComplete","autoFocus","placeholder","onChange","value","Spinner","color","height","width","timeout","App","setGallery","setPage","reqStatus","setReqStatus","setLargeImageUrl","trim","images","length","toast","error","autoClose","prev","console","log","fetchGallery","handleLoadMore","scrollTo","top","documentElement","scrollHeight","behavior","galleryLength","style","ReactDOM","render","StrictMode","getElementById"],"mappings":"ySAKaA,EAAW,uCAAG,WAAOC,EAAOC,GAAd,iBAAAC,EAAA,sEACFC,IAAMC,IAAN,UAHR,2BAGQ,cACJJ,EADI,iBACUC,EADV,gBAJb,qCAIa,yDADE,uBACjBI,EADiB,EACjBA,KADiB,kBAIlBA,EAAKC,MAJa,2CAAH,wD,eCFT,SAASC,EAAT,GAAoE,IAAzCC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,aAK9D,OACE,oBAAIC,UAAU,mBAAd,SACE,qBACEF,QAPc,SAACG,GACrBH,EAAQD,IAOFK,IAAKH,EACLI,IAAI,GACJH,UAAU,6BCVL,SAASI,EAAT,GAA2C,IAApBC,EAAmB,EAAnBA,QAASP,EAAU,EAAVA,QAIzC,OACE,oBAAIE,UAAU,eAAd,SACGK,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIR,EAAP,EAAOA,aAAcF,EAArB,EAAqBA,cAAeW,EAApC,EAAoCA,KAApC,OACX,cAACZ,EAAD,CAEEG,aAAcA,EACdF,cAAeA,EACfW,KAAMA,EACNV,QAASA,GAJJS,QCRnB,IAAME,EAAYC,SAASC,cAAc,eAE1B,SAASC,EAAT,GAAuC,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QACxCC,qBAAU,WACR,IAAMC,EAAgB,SAACf,GACN,WAAXA,EAAEgB,MACJH,KAKJ,OADAI,OAAOC,iBAAiB,UAAWH,GAC5B,WACLE,OAAOE,oBAAoB,UAAWJ,MAGvC,CAACF,IAiBF,OAAOO,uBACL,qBAAKvB,QARkB,SAACG,GACtBA,EAAEqB,SAAWrB,EAAEsB,eACjBT,KAMkCd,UAAU,UAA5C,SACE,qBAAKA,UAAU,QAAf,SAAwBa,MAG1BJ,GCtCS,SAASe,EAAT,GAA6B,IAAX1B,EAAU,EAAVA,QAG7B,OACE,wBAAQ2B,KAAK,SAASzB,UAAU,SAASF,QAASA,EAAlD,uBCJU,SAAS4B,EAAT,GAAgC,IAAZC,EAAW,EAAXA,SAIjC,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAaG,OACE,wBAAQ9B,UAAU,YAAlB,SACE,uBAAM2B,SAbS,SAAC1B,GACtBA,EAAE8B,iBACFJ,EAASE,GACTC,EAAe,KAUuB9B,UAAU,aAA1C,UACE,wBAAQyB,KAAK,SAASzB,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVgC,KAAK,cACLP,KAAK,OACLQ,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SApBW,SAACnC,GACtB6B,EAAe7B,EAAEqB,OAAOe,QAoBdA,MAAOR,S,qBChCN,SAASS,IAEpB,OACE,qBAAKtC,UAAU,UAAf,SACE,cAAC,IAAD,CAAQyB,KAAK,OAAOc,MAAM,UAAUC,OAAQ,IAAKC,MAAO,IAAMC,QAAS,Q,YCKhE,SAASC,IACtB,MAAsCf,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOvB,EAAP,KAAgBuC,EAAhB,KACA,EAAwBhB,mBAAS,GAAjC,mBAAOtC,EAAP,KAAauD,EAAb,KACA,EAAkCjB,mBAAS,QAA3C,mBAAOkB,EAAP,KAAkBC,EAAlB,KACA,EAA0CnB,mBAAS,MAAnD,mBAAO/B,EAAP,KAAsBmD,EAAtB,KAEAjC,qBAAU,WACmB,KAAvBc,EAAYoB,QAEE,uCAAG,4BAAA1D,EAAA,sEAGjBwD,EAAa,WACbC,EAAiB,MAJA,SAMI5D,EAAYyC,GANhB,OAOK,KADhBqB,EANW,QAONC,QACTC,IAAMC,MACJ,2EACA,CACEC,UAAW,MAIjBP,EAAa,YACbF,GAAQ,SAACU,GAAD,OAAUA,EAAO,KACzBX,EAAWM,GAjBM,kDAmBjBM,QAAQC,IAAR,MAnBiB,0DAAH,oDAsBlBC,KACC,CAAC7B,IAEJ,IAAM8B,EAAc,uCAAG,4BAAApE,EAAA,sEACAH,EAAYyC,EAAavC,GADzB,OACf4D,EADe,OAErBH,EAAa,WACbH,GAAW,SAACW,GAAD,4BAAcA,GAAd,YAAuBL,OAClCL,GAAQ,SAACU,GAAD,OAAUA,EAAO,KClD3BrC,OAAO0C,SAAS,CACdC,IAAKnD,SAASoD,gBAAgBC,aAC9BC,SAAU,WD4CW,2CAAH,qDAuBdC,EAAgB5D,EAAQ8C,OAAS,EAEvC,OACE,sBAAKnD,UAAU,YAAf,UACE,cAAC,EAAD,CAAW2B,SAnBM,SAACE,GACpBe,EAAW,IACXd,EAAeD,GACfgB,EAAQ,GACRE,EAAa,cAgBX,cAAC3C,EAAD,CAAcN,QAbQ,SAACD,GACzBmD,EAAiBnD,IAY2BQ,QAASA,IACpC,YAAdyC,GAA2B,cAAC,EAAD,IAC3BmB,GAAiB,cAACzC,EAAD,CAAQ1B,QAAS6D,IAClC9D,GACC,cAACe,EAAD,CAAOV,IAAKL,EAAeiB,QAbR,WACvBkC,EAAiB,OAYb,SACE,qBAAKkB,MAAO,CAAEzB,MAAO,KAArB,SACE,qBAAKvC,IAAKL,EAAeM,IAAI,SAInC,cAAC,IAAD,OEhFNgE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3D,SAAS4D,eAAe,W","file":"static/js/main.511ef2aa.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst KEY = \"22615955-8cacb706f354043da71650c83\";\r\nconst BASE_URL = \"https://pixabay.com/api/\";\r\n\r\nexport const fetchImages = async (query, page) => {\r\n  const { data } = await axios.get(\r\n    `${BASE_URL}?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  );\r\n  return data.hits;\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ImageGalleryItem({largeImageURL, onClick, webformatURL})  {\r\n  const handleOnClick = (e) => {\r\n    onClick(largeImageURL);\r\n  };\r\n  // render() {\r\n    return (\r\n      <li className=\"ImageGalleryItem\">\r\n        <img\r\n          onClick={handleOnClick}\r\n          src={webformatURL}\r\n          alt=\"\"\r\n          className=\"ImageGalleryItem-image\"\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n// }\r\n\r\nImageGalleryItem.propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  webformatURL: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nexport default function ImageGallery({gallery, onClick}) {\r\n  // render() {\r\n    // const { gallery, onClick } = this.props\r\n    \r\n      return (\r\n        <ul className=\"ImageGallery\">\r\n          {gallery.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n            <ImageGalleryItem\r\n              key={id}\r\n              webformatURL={webformatURL}\r\n              largeImageURL={largeImageURL}\r\n              tags={tags}\r\n              onClick={onClick}\r\n            />\r\n          ))}\r\n        </ul>\r\n      );\r\n    // }\r\n  }\r\n\r\n\r\nImageGallery.propTypes = {\r\n  gallery: PropTypes.array,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function Modal({ children, onClose }) {\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.code === \"Escape\") {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n\r\n    }\r\n  }, [onClose]);\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  // }\r\n\r\n\r\n  const handleOverlayClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n  \r\n  // render() {\r\n    return createPortal(\r\n      <div onClick={handleOverlayClick} className=\"Overlay\">\r\n        <div className=\"Modal\">{children}</div>\r\n      </div>,\r\n\r\n      modalRoot\r\n    );\r\n  }\r\n// }\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Button ({onClick}) {\r\n  // render() {\r\n    // const { onClick } = this.props;\r\n    return (\r\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n       Load more\r\n      </button>\r\n    );\r\n  }\r\n// }\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\n\r\n","import React, { useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n export default function Searchbar({onSubmit}) {\r\n  // state = {\r\n  //   searchValue: \"\",\r\n  // };\r\n   const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(searchValue);\r\n    setSearchValue(\"\");\r\n  };\r\n  const handleOnChange = (e) => {\r\n    setSearchValue(e.target.value);\r\n    // console.log(e.target.value);\r\n  };\r\n\r\n    // render() {\r\n      return (\r\n        <header className=\"Searchbar\">\r\n          <form onSubmit={handleOnSubmit} className=\"SearchForm\">\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n              <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n\r\n            <input\r\n              className=\"SearchForm-input\"\r\n              name=\"searchValue\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search images\"\r\n              onChange={handleOnChange}\r\n              value={searchValue}\r\n            />\r\n          </form>\r\n        </header>\r\n      );\r\n\r\n    }\r\n// }\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function Spinner () {\r\n  // render() {\r\n    return (\r\n      <div className=\"Spinner\">\r\n        <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100}  timeout={700}/>\r\n      </div>\r\n    );\r\n  }\r\n// }\r\n\r\n","import React, { useState, useEffect } from \"react\";\nimport { fetchImages } from \"./services/FetchImages\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { smoothScroll } from \"./services/smoothScroll\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery.jsx\";\nimport Modal from \"./components/Modal/Modal.jsx\";\nimport Button from \"./components/Button/Button.jsx\";\nimport SearchBar from \"./components/Searchbar/Searchbar.jsx\";\nimport Loader from \"./components/Loader/Loader.jsx\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [gallery, setGallery] = useState([]);\n  const [page, setPage] = useState(1);\n  const [reqStatus, setReqStatus] = useState(\"idle\");\n  const [largeImageURL, setLargeImageUrl] = useState(null);\n\n  useEffect(() => {\n    if (searchValue.trim() === \"\") return;\n\n    const fetchGallery = async () => {\n      // async () => {\n      try {\n        setReqStatus(\"pending\");\n        setLargeImageUrl(null);\n\n        const images = await fetchImages(searchValue);\n        if (images.length === 0) {\n          toast.error(\n            \"Sorry, there are no images matching your search query. Please try again.\",\n            {\n              autoClose: 3000,\n            }\n          );\n        }\n        setReqStatus(\"resolved\");\n        setPage((prev) => prev + 1);\n        setGallery(images);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchGallery();\n  }, [searchValue]);\n\n  const handleLoadMore = async () => {\n    const images = await fetchImages(searchValue, page);\n    setReqStatus(\"pending\");\n    setGallery((prev) => [...prev, ...images]);\n    setPage((prev) => prev + 1);\n    smoothScroll();\n  };\n\n  const handleSubmit = (searchValue) => {\n    setGallery([]);\n    setSearchValue(searchValue);\n    setPage(1);\n    setReqStatus(\"pending\");\n  };\n\n  const handleLargeImgUrl = (largeImageURL) => {\n    setLargeImageUrl(largeImageURL);\n  };\n\n  const handleCloseModal = () => {\n    setLargeImageUrl(null);\n  };\n\n  const galleryLength = gallery.length > 1;\n\n  return (\n    <div className=\"Container\">\n      <SearchBar onSubmit={handleSubmit} />\n      <ImageGallery onClick={handleLargeImgUrl} gallery={gallery} />\n      {reqStatus === \"pending\" && <Loader />}\n      {galleryLength && <Button onClick={handleLoadMore} />}\n      {largeImageURL && (\n        <Modal src={largeImageURL} onClose={handleCloseModal}>\n          <div style={{ width: 850 }}>\n            <img src={largeImageURL} alt=\"\" />\n          </div>\n        </Modal>\n      )}\n      <ToastContainer />\n    </div>\n  );\n}\n","export const smoothScroll = () =>\r\n  window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: \"smooth\",\r\n  });\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}